//Write C programs to illustrate the following IPC mechanisms
// a) Pipes b) FIFOs
// Pipes
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<sys/types.h>
#include<sys/wait.h>
#include<unistd.h>
int main()
{
 int fd1[2];
 int fd2[2];
 char fixed_str[]="Welcome";
 char input_str[100];
 pid_t p;
 if(pipe(fd1)==-1){
 fprintf(stderr,"pipe failed");
 return 1;
 }
 if(pipe(fd2)==-1){
 fprintf(stderr,"pipe failed");
 return 1;
 }
 scanf("%s",input_str);
 p=fork();
 if(p<0){
 fprintf(stderr, "fork failed");
 return 1;
 }
 else if (p>0){
 char concat_str[100];
 close(fd1[0]);
 write(fd1[1],input_str,strlen(input_str)+1);
 close(fd1[1]);
 wait(NULL);
 close(fd2[1]);
 read(fd2[0],concat_str, 100);
 printf("concatenated string %s\n",concat_str);
 close(fd2[0]);
 }
 else{
 close(fd1[1]);
 char concat_str[100];
 read(fd1[0],concat_str,100);
 int k=strlen(concat_str);
 int i;
 for(i=0;i<strlen(fixed_str);i++)
 concat_str[k++]=fixed_str[i];
 concat_str[k]='\0';
 close(fd1[0]);
 close(fd2[0]);
 write(fd2[1], concat_str, strlen(concat_str)+1);
 close(fd2[1]);
 exit(0);
 }
}


/*OUTPUT
ubuntu@DESKTOP-B8CV2UR:~$ ./a.out
Hi
concatenated string HiWelcome
ubuntu@DESKTOP-B8CV2UR:~$
*/

//FIFOs

//Fifo writer code

#include<stdio.h>
#include<string.h>
#include<fcntl.h>
#include<sys/stat.h>
#include<sys/types.h>
#include<unistd.h>
int main()
{
 int fd;
 char *myfifo="/home/ubuntu/myfifo";
 mkfifo(myfifo,0666);
 char arr1[80], arr2[80];
 while(1)
 {
 fd=open(myfifo,O_WRONLY);
 fgets(arr2, 80, stdin);
 write(fd, arr2,strlen(arr2)+1);
 close(fd);
 fd=open(myfifo,O_RDONLY);
 read(fd,arr1,sizeof(arr1));
 printf("USer2: %s\n",arr1);
 close(fd);
 }
 return 0;
}
Fifo readers code
#include<stdio.h>
#include<string.h>
#include<fcntl.h>
#include<sys/stat.h>
#include<sys/types.h>
#include<unistd.h>
int main()
{
 int fd;
 char * myfifo="/home/ubuntu/myfifo";
 mkfifo(myfifo,0666);
 char str1[80],str2[80];
 while(1)
 {
 fd=open(myfifo, O_RDONLY);
 read(fd,str1,80);
 printf("User1: %s\n",str1);
 close(fd);
 fd=open(myfifo, O_WRONLY);
 fgets(str2,80,stdin);
 write(fd,str2,strlen(str2)+1);
 close(fd);
 }
 return 0;
}

//OUTPUT
//simultaneously execute both write and reader code in two terminals
